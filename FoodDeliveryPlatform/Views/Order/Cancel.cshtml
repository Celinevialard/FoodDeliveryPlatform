@using DTO;
@model OrderCancelVM
@{
  ViewData["Title"] = $"Annuler la commande #{Model.OrderId}";
}
<h1>@ViewBag.Title</h1>

<h5>Indiquer les informations suivantes : </h5>
<hr />
<div class="row">
  <div class="col-md-4">
    <form asp-action="Cancel">
      <div asp-validation-summary="All" class="text-danger"></div>

      @Html.HiddenFor(m => m.OrderId)
      <div class="form-group">
        <label class="control-label"><i class="fas fa-barcode"></i> Numéro de commande</label>
        <input asp-for="OrderNumber" class="form-control" />
        <span asp-validation-for="OrderNumber" class="text-danger"></span>
      </div>

      <div class="form-group">
        <label class="control-label"><i class="fas fa-user"></i> Nom</label>
        <input asp-for="Lastname" class="form-control" />
        <span asp-validation-for="Lastname" class="text-danger"></span>
      </div>

      <div class="form-group">
        <label class="control-label"><i class="fas fa-user"></i> Prénom</label>
        <input asp-for="Firstname" class="form-control" />
        <span asp-validation-for="Firstname" class="text-danger"></span>
      </div>

      <div class="form-group">
        <button type="submit" class="btn btn-success">
          <i class="fas fa-trash"></i>Annuler la commande
        </button>
      </div>
    </form>
  </div>
</div>

<div>
  <a class="btn btn-secondary" asp-action="Index"><i class="fas fa-arrow-left"></i> Retour</a>
</div>

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

