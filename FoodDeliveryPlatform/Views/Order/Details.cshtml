@model FoodDeliveryPlatform.Models.OrderVM

@{
  ViewData["Title"] = "Details";
}

<h2>Details de la commande</h2>

<div>
  <hr />
  <div class="row">
    <div class="col-6">
      <h5>Informations de livraison</h5>
      <dl class="row">
        <dt class="col-4">
          <i class="fas fa-id-card"></i> Livraison à
        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.CustomerName)
        </dd>
        <dt class="col-4">

        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.CustomerAddress)
        </dd>
        <dt class="col-4">

        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.CustomerLocation)
        </dd>
        <dt class="col-4">
          <i class="fas fa-id-card"></i> Restaurant
        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.RestaurantName)
        </dd>
        <dt class="col-4">

        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.RestaurantLocation)
        </dd>
        <dt class="col-4">
          <i class="fas fa-id-card"></i> Livreur
        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.CourrierName)
        </dd>

        @if (Model.OrderNote != null && Model.OrderNote.Any())
        {
          <dt class="col-4">
            <i class="fas fa-info-circle"></i> Information au livreur
          </dt>
          <dd class="col-8">
            @Html.DisplayFor(model => model.OrderNote)
          </dd>
        }
        <dt class="col-4">
          <i class="fas fa-clock"></i> Heure prévue
        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.OrderDate)
        </dd>
        <dt class="col-4">
          <i class="fas fa-file-invoice-dollar"></i> Montant total
        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.TotalAmount)
        </dd>
        <dt class="col-4">
          <i class="fas fa-tasks"></i> Etat
        </dt>
        <dd class="col-8">
          @Html.DisplayFor(model => model.Status)
        </dd>
      </dl>
    </div>
    @if (Model.Details != null && Model.Details.Any())
    {

      <div class="col-6">
        <h5>Détail de la commande</h5>
        <table>
          <thead>
            <tr>
              <th width="40%">
                <i class="fas fa-hamburger"></i> Plat
              </th>
              <th width="25%">
                <i class="fas fa-list-ol"></i> Quantité
              </th>
              <th width="35%">
                <i class="fas fa-sticky-note"></i> Notes au restaurant
              </th>
            </tr>
          </thead>
          <tbody>
            @foreach (var item in Model.Details)
            {
              <tr>
                <td>
                  @Html.DisplayFor(modelItem => item.DishName)
                </td>
                <td>
                  @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                  @Html.DisplayFor(modelItem => item.OrderDetailsNote)
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    }
    else
    {
      <p><i class="fas fa-info-circle"></i> Pas de détails pour cette commande</p>
    }
  </div>
</div>
<div>
  <a class="btn btn-secondary" asp-action="Index"><i class="fas fa-arrow-left"></i> Afficher la liste</a>
  @if (Model.ForCourrier)
  {
    <a class="btn btn-success" href="@Url.Action("Edit", "Order", new { id = Model.OrderId })"> <i class="fas fa-clipboard-check"></i> Commande livrée</a>
  }
  else if (Model.OrderDate >= DateTime.Now.AddHours(3))
  {
    <a class="btn btn-danger" href="@Url.Action("Cancel", "Order", new { id = Model.OrderId })"> <i class="fas fa-trash"></i> Annuler commande</a>
  }
</div>
